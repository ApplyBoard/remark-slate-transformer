// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`e2e article.md 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "text": "heading 1",
      },
    ],
    "depth": 1,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "heading 2",
      },
    ],
    "depth": 2,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "heading 3",
      },
    ],
    "depth": 3,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "heading 4",
      },
    ],
    "depth": 4,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "heading 5",
      },
    ],
    "depth": 5,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "heading 6",
      },
    ],
    "depth": 6,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "text": "aaaaaaaa",
      },
      Object {
        "strong": true,
        "text": "bold",
      },
      Object {
        "emphasis": true,
        "text": "emphasis",
      },
      Object {
        "delete": true,
        "text": "delete",
      },
      Object {
        "inlineCode": true,
        "text": "inline code",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "checked": null,
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "list",
              },
            ],
            "type": "paragraph",
          },
          Object {
            "children": Array [
              Object {
                "checked": null,
                "children": Array [
                  Object {
                    "children": Array [
                      Object {
                        "text": "list",
                      },
                    ],
                    "type": "paragraph",
                  },
                  Object {
                    "children": Array [
                      Object {
                        "checked": null,
                        "children": Array [
                          Object {
                            "children": Array [
                              Object {
                                "text": "list",
                              },
                            ],
                            "type": "paragraph",
                          },
                        ],
                        "spread": false,
                        "type": "listItem",
                      },
                    ],
                    "ordered": false,
                    "spread": false,
                    "start": null,
                    "type": "list",
                  },
                ],
                "spread": false,
                "type": "listItem",
              },
              Object {
                "checked": null,
                "children": Array [
                  Object {
                    "children": Array [
                      Object {
                        "text": "list",
                      },
                    ],
                    "type": "paragraph",
                  },
                ],
                "spread": false,
                "type": "listItem",
              },
              Object {
                "checked": null,
                "children": Array [
                  Object {
                    "children": Array [
                      Object {
                        "text": "list",
                      },
                    ],
                    "type": "paragraph",
                  },
                ],
                "spread": false,
                "type": "listItem",
              },
            ],
            "ordered": false,
            "spread": false,
            "start": null,
            "type": "list",
          },
        ],
        "spread": true,
        "type": "listItem",
      },
      Object {
        "checked": false,
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "not checked",
              },
            ],
            "type": "paragraph",
          },
        ],
        "spread": false,
        "type": "listItem",
      },
      Object {
        "checked": true,
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "checked",
              },
            ],
            "type": "paragraph",
          },
        ],
        "spread": false,
        "type": "listItem",
      },
    ],
    "ordered": false,
    "spread": true,
    "start": null,
    "type": "list",
  },
  Object {
    "children": Array [
      Object {
        "checked": null,
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "ordered list",
              },
            ],
            "type": "paragraph",
          },
        ],
        "spread": false,
        "type": "listItem",
      },
      Object {
        "checked": null,
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "ordered list",
              },
            ],
            "type": "paragraph",
          },
        ],
        "spread": false,
        "type": "listItem",
      },
      Object {
        "checked": null,
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "ordered list",
              },
            ],
            "type": "paragraph",
          },
          Object {
            "children": Array [
              Object {
                "checked": null,
                "children": Array [
                  Object {
                    "children": Array [
                      Object {
                        "text": "aaa",
                      },
                    ],
                    "type": "paragraph",
                  },
                ],
                "spread": false,
                "type": "listItem",
              },
              Object {
                "checked": null,
                "children": Array [
                  Object {
                    "children": Array [
                      Object {
                        "text": "aaa",
                      },
                    ],
                    "type": "paragraph",
                  },
                  Object {
                    "children": Array [
                      Object {
                        "checked": null,
                        "children": Array [
                          Object {
                            "children": Array [
                              Object {
                                "text": "eeeee",
                              },
                            ],
                            "type": "paragraph",
                          },
                        ],
                        "spread": false,
                        "type": "listItem",
                      },
                      Object {
                        "checked": null,
                        "children": Array [
                          Object {
                            "children": Array [
                              Object {
                                "text": "eeeee",
                              },
                            ],
                            "type": "paragraph",
                          },
                        ],
                        "spread": false,
                        "type": "listItem",
                      },
                    ],
                    "ordered": true,
                    "spread": false,
                    "start": 1,
                    "type": "list",
                  },
                ],
                "spread": false,
                "type": "listItem",
              },
              Object {
                "checked": null,
                "children": Array [
                  Object {
                    "children": Array [
                      Object {
                        "text": "aaa",
                      },
                    ],
                    "type": "paragraph",
                  },
                ],
                "spread": false,
                "type": "listItem",
              },
            ],
            "ordered": true,
            "spread": false,
            "start": 1,
            "type": "list",
          },
        ],
        "spread": false,
        "type": "listItem",
      },
      Object {
        "checked": null,
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "ordered list",
              },
            ],
            "type": "paragraph",
          },
        ],
        "spread": false,
        "type": "listItem",
      },
    ],
    "ordered": true,
    "spread": false,
    "start": 1,
    "type": "list",
  },
  Object {
    "children": Array [
      Object {
        "text": "This is ",
      },
      Object {
        "children": Array [
          Object {
            "text": "link to GitHub.com",
          },
        ],
        "title": null,
        "type": "link",
        "url": "https://github.com/",
      },
      Object {
        "text": ".",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "text": "This is ",
      },
      Object {
        "alt": "image",
        "children": Array [
          Object {
            "text": "",
          },
        ],
        "title": null,
        "type": "image",
        "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
        "void": true,
      },
      Object {
        "text": ".",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "text": "quote
quote
quote
quote",
          },
        ],
        "type": "paragraph",
      },
    ],
    "type": "blockquote",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "text": "quote",
          },
        ],
        "type": "paragraph",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "quoted quote",
              },
            ],
            "type": "paragraph",
          },
        ],
        "type": "blockquote",
      },
    ],
    "type": "blockquote",
  },
  Object {
    "align": Array [
      "left",
      "right",
      "center",
    ],
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "Left align",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "Right align",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "Center align",
              },
            ],
            "type": "tableCell",
          },
        ],
        "type": "tableRow",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "This",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "This",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "This",
              },
            ],
            "type": "tableCell",
          },
        ],
        "type": "tableRow",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "column",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "column",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "column",
              },
            ],
            "type": "tableCell",
          },
        ],
        "type": "tableRow",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "will",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "will",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "will",
              },
            ],
            "type": "tableCell",
          },
        ],
        "type": "tableRow",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "be",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "be",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "be",
              },
            ],
            "type": "tableCell",
          },
        ],
        "type": "tableRow",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "left",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "right",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "center",
              },
            ],
            "type": "tableCell",
          },
        ],
        "type": "tableRow",
      },
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "text": "aligned",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "aligned",
              },
            ],
            "type": "tableCell",
          },
          Object {
            "children": Array [
              Object {
                "text": "aligned",
              },
            ],
            "type": "tableCell",
          },
        ],
        "type": "tableRow",
      },
    ],
    "type": "table",
  },
  Object {
    "children": Array [
      Object {
        "text": "",
      },
    ],
    "type": "thematicBreak",
    "void": true,
  },
  Object {
    "children": Array [
      Object {
        "text": "",
      },
    ],
    "type": "thematicBreak",
    "void": true,
  },
  Object {
    "children": Array [
      Object {
        "text": "function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;",
      },
    ],
    "lang": "javascript",
    "meta": null,
    "type": "code",
  },
]
`;

exports[`e2e article.md 2`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 1",
        },
      ],
      "depth": 1,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 2",
        },
      ],
      "depth": 2,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 3",
        },
      ],
      "depth": 3,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 4",
        },
      ],
      "depth": 4,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 5",
        },
      ],
      "depth": 5,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 6",
        },
      ],
      "depth": 6,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "aaaaaaaa",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "bold",
            },
          ],
          "type": "strong",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "emphasis",
            },
          ],
          "type": "emphasis",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "delete",
            },
          ],
          "type": "delete",
        },
        Object {
          "type": "inlineCode",
          "value": "inline code",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "list",
                },
              ],
              "type": "paragraph",
            },
            Object {
              "children": Array [
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "list",
                        },
                      ],
                      "type": "paragraph",
                    },
                    Object {
                      "children": Array [
                        Object {
                          "checked": null,
                          "children": Array [
                            Object {
                              "children": Array [
                                Object {
                                  "type": "text",
                                  "value": "list",
                                },
                              ],
                              "type": "paragraph",
                            },
                          ],
                          "spread": false,
                          "type": "listItem",
                        },
                      ],
                      "ordered": false,
                      "spread": false,
                      "start": null,
                      "type": "list",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "list",
                        },
                      ],
                      "type": "paragraph",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "list",
                        },
                      ],
                      "type": "paragraph",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
              ],
              "ordered": false,
              "spread": false,
              "start": null,
              "type": "list",
            },
          ],
          "spread": true,
          "type": "listItem",
        },
        Object {
          "checked": false,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "not checked",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
        Object {
          "checked": true,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "checked",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
      ],
      "ordered": false,
      "spread": true,
      "start": null,
      "type": "list",
    },
    Object {
      "children": Array [
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "ordered list",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "ordered list",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "ordered list",
                },
              ],
              "type": "paragraph",
            },
            Object {
              "children": Array [
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "aaa",
                        },
                      ],
                      "type": "paragraph",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "aaa",
                        },
                      ],
                      "type": "paragraph",
                    },
                    Object {
                      "children": Array [
                        Object {
                          "checked": null,
                          "children": Array [
                            Object {
                              "children": Array [
                                Object {
                                  "type": "text",
                                  "value": "eeeee",
                                },
                              ],
                              "type": "paragraph",
                            },
                          ],
                          "spread": false,
                          "type": "listItem",
                        },
                        Object {
                          "checked": null,
                          "children": Array [
                            Object {
                              "children": Array [
                                Object {
                                  "type": "text",
                                  "value": "eeeee",
                                },
                              ],
                              "type": "paragraph",
                            },
                          ],
                          "spread": false,
                          "type": "listItem",
                        },
                      ],
                      "ordered": true,
                      "spread": false,
                      "start": 1,
                      "type": "list",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "aaa",
                        },
                      ],
                      "type": "paragraph",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
              ],
              "ordered": true,
              "spread": false,
              "start": 1,
              "type": "list",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "ordered list",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
      ],
      "ordered": true,
      "spread": false,
      "start": 1,
      "type": "list",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "This is ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "link to GitHub.com",
            },
          ],
          "title": null,
          "type": "link",
          "url": "https://github.com/",
        },
        Object {
          "type": "text",
          "value": ".",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "This is ",
        },
        Object {
          "alt": "image",
          "title": null,
          "type": "image",
          "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
        },
        Object {
          "type": "text",
          "value": ".",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "quote
quote
quote
quote",
            },
          ],
          "type": "paragraph",
        },
      ],
      "type": "blockquote",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "quote",
            },
          ],
          "type": "paragraph",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "quoted quote",
                },
              ],
              "type": "paragraph",
            },
          ],
          "type": "blockquote",
        },
      ],
      "type": "blockquote",
    },
    Object {
      "align": Array [
        "left",
        "right",
        "center",
      ],
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "Left align",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "Right align",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "Center align",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "This",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "This",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "This",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "column",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "column",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "column",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "will",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "will",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "will",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "be",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "be",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "be",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "left",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "right",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "center",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "aligned",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "aligned",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "aligned",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
      ],
      "type": "table",
    },
    Object {
      "type": "thematicBreak",
    },
    Object {
      "type": "thematicBreak",
    },
    Object {
      "lang": "javascript",
      "meta": null,
      "type": "code",
      "value": "function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;",
    },
  ],
  "type": "root",
}
`;

exports[`e2e article.md 3`] = `
"# heading 1

## heading 2

### heading 3

#### heading 4

##### heading 5

###### heading 6

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

aaaaaaaa**bold**_emphasis_~~delete~~\`inline code\`

-   list

    -   list
        -   list
    -   list
    -   list

-   [ ] not checked

-   [x] checked

1.  ordered list
2.  ordered list
3.  ordered list
    1.  aaa
    2.  aaa
        1.  eeeee
        2.  eeeee
    3.  aaa
4.  ordered list

This is [link to GitHub.com](https://github.com/).

This is ![image](https://github.githubassets.com/images/modules/logos_page/Octocat.png).

> quote
> quote
> quote
> quote

> quote
>
> > quoted quote

| Left align | Right align | Center align |
| :--------- | ----------: | :----------: |
| This       |        This |     This     |
| column     |      column |    column    |
| will       |        will |     will     |
| be         |          be |      be      |
| left       |       right |    center    |
| aligned    |     aligned |    aligned   |

* * *

* * *

\`\`\`javascript
function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;
\`\`\`
"
`;

exports[`e2e legacy article.md 1`] = `
Object {
  "document": Object {
    "nodes": Array [
      Object {
        "data": Object {
          "depth": 1,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "heading 1",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {
          "depth": 2,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "heading 2",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {
          "depth": 3,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "heading 3",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {
          "depth": 4,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "heading 4",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {
          "depth": 5,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "heading 5",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {
          "depth": 6,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "heading 6",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "aaaaaaaa",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "strong",
              },
            ],
            "object": "text",
            "text": "bold",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "emphasis",
              },
            ],
            "object": "text",
            "text": "emphasis",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "delete",
              },
            ],
            "object": "text",
            "text": "delete",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "inlineCode",
              },
            ],
            "object": "text",
            "text": "inline code",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {
          "ordered": false,
          "spread": true,
          "start": null,
        },
        "nodes": Array [
          Object {
            "data": Object {
              "checked": null,
              "spread": true,
            },
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "list",
                  },
                ],
                "object": "block",
                "type": "paragraph",
              },
              Object {
                "data": Object {
                  "ordered": false,
                  "spread": false,
                  "start": null,
                },
                "nodes": Array [
                  Object {
                    "data": Object {
                      "checked": null,
                      "spread": false,
                    },
                    "nodes": Array [
                      Object {
                        "data": Object {},
                        "nodes": Array [
                          Object {
                            "marks": Array [],
                            "object": "text",
                            "text": "list",
                          },
                        ],
                        "object": "block",
                        "type": "paragraph",
                      },
                      Object {
                        "data": Object {
                          "ordered": false,
                          "spread": false,
                          "start": null,
                        },
                        "nodes": Array [
                          Object {
                            "data": Object {
                              "checked": null,
                              "spread": false,
                            },
                            "nodes": Array [
                              Object {
                                "data": Object {},
                                "nodes": Array [
                                  Object {
                                    "marks": Array [],
                                    "object": "text",
                                    "text": "list",
                                  },
                                ],
                                "object": "block",
                                "type": "paragraph",
                              },
                            ],
                            "object": "block",
                            "type": "listItem",
                          },
                        ],
                        "object": "block",
                        "type": "list",
                      },
                    ],
                    "object": "block",
                    "type": "listItem",
                  },
                  Object {
                    "data": Object {
                      "checked": null,
                      "spread": false,
                    },
                    "nodes": Array [
                      Object {
                        "data": Object {},
                        "nodes": Array [
                          Object {
                            "marks": Array [],
                            "object": "text",
                            "text": "list",
                          },
                        ],
                        "object": "block",
                        "type": "paragraph",
                      },
                    ],
                    "object": "block",
                    "type": "listItem",
                  },
                  Object {
                    "data": Object {
                      "checked": null,
                      "spread": false,
                    },
                    "nodes": Array [
                      Object {
                        "data": Object {},
                        "nodes": Array [
                          Object {
                            "marks": Array [],
                            "object": "text",
                            "text": "list",
                          },
                        ],
                        "object": "block",
                        "type": "paragraph",
                      },
                    ],
                    "object": "block",
                    "type": "listItem",
                  },
                ],
                "object": "block",
                "type": "list",
              },
            ],
            "object": "block",
            "type": "listItem",
          },
          Object {
            "data": Object {
              "checked": false,
              "spread": false,
            },
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "not checked",
                  },
                ],
                "object": "block",
                "type": "paragraph",
              },
            ],
            "object": "block",
            "type": "listItem",
          },
          Object {
            "data": Object {
              "checked": true,
              "spread": false,
            },
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "checked",
                  },
                ],
                "object": "block",
                "type": "paragraph",
              },
            ],
            "object": "block",
            "type": "listItem",
          },
        ],
        "object": "block",
        "type": "list",
      },
      Object {
        "data": Object {
          "ordered": true,
          "spread": false,
          "start": 1,
        },
        "nodes": Array [
          Object {
            "data": Object {
              "checked": null,
              "spread": false,
            },
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "ordered list",
                  },
                ],
                "object": "block",
                "type": "paragraph",
              },
            ],
            "object": "block",
            "type": "listItem",
          },
          Object {
            "data": Object {
              "checked": null,
              "spread": false,
            },
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "ordered list",
                  },
                ],
                "object": "block",
                "type": "paragraph",
              },
            ],
            "object": "block",
            "type": "listItem",
          },
          Object {
            "data": Object {
              "checked": null,
              "spread": false,
            },
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "ordered list",
                  },
                ],
                "object": "block",
                "type": "paragraph",
              },
              Object {
                "data": Object {
                  "ordered": true,
                  "spread": false,
                  "start": 1,
                },
                "nodes": Array [
                  Object {
                    "data": Object {
                      "checked": null,
                      "spread": false,
                    },
                    "nodes": Array [
                      Object {
                        "data": Object {},
                        "nodes": Array [
                          Object {
                            "marks": Array [],
                            "object": "text",
                            "text": "aaa",
                          },
                        ],
                        "object": "block",
                        "type": "paragraph",
                      },
                    ],
                    "object": "block",
                    "type": "listItem",
                  },
                  Object {
                    "data": Object {
                      "checked": null,
                      "spread": false,
                    },
                    "nodes": Array [
                      Object {
                        "data": Object {},
                        "nodes": Array [
                          Object {
                            "marks": Array [],
                            "object": "text",
                            "text": "aaa",
                          },
                        ],
                        "object": "block",
                        "type": "paragraph",
                      },
                      Object {
                        "data": Object {
                          "ordered": true,
                          "spread": false,
                          "start": 1,
                        },
                        "nodes": Array [
                          Object {
                            "data": Object {
                              "checked": null,
                              "spread": false,
                            },
                            "nodes": Array [
                              Object {
                                "data": Object {},
                                "nodes": Array [
                                  Object {
                                    "marks": Array [],
                                    "object": "text",
                                    "text": "eeeee",
                                  },
                                ],
                                "object": "block",
                                "type": "paragraph",
                              },
                            ],
                            "object": "block",
                            "type": "listItem",
                          },
                          Object {
                            "data": Object {
                              "checked": null,
                              "spread": false,
                            },
                            "nodes": Array [
                              Object {
                                "data": Object {},
                                "nodes": Array [
                                  Object {
                                    "marks": Array [],
                                    "object": "text",
                                    "text": "eeeee",
                                  },
                                ],
                                "object": "block",
                                "type": "paragraph",
                              },
                            ],
                            "object": "block",
                            "type": "listItem",
                          },
                        ],
                        "object": "block",
                        "type": "list",
                      },
                    ],
                    "object": "block",
                    "type": "listItem",
                  },
                  Object {
                    "data": Object {
                      "checked": null,
                      "spread": false,
                    },
                    "nodes": Array [
                      Object {
                        "data": Object {},
                        "nodes": Array [
                          Object {
                            "marks": Array [],
                            "object": "text",
                            "text": "aaa",
                          },
                        ],
                        "object": "block",
                        "type": "paragraph",
                      },
                    ],
                    "object": "block",
                    "type": "listItem",
                  },
                ],
                "object": "block",
                "type": "list",
              },
            ],
            "object": "block",
            "type": "listItem",
          },
          Object {
            "data": Object {
              "checked": null,
              "spread": false,
            },
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "ordered list",
                  },
                ],
                "object": "block",
                "type": "paragraph",
              },
            ],
            "object": "block",
            "type": "listItem",
          },
        ],
        "object": "block",
        "type": "list",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "This is ",
          },
          Object {
            "data": Object {
              "title": null,
              "url": "https://github.com/",
            },
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "link to GitHub.com",
              },
            ],
            "object": "inline",
            "type": "link",
          },
          Object {
            "marks": Array [],
            "object": "text",
            "text": ".",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "This is ",
          },
          Object {
            "data": Object {
              "alt": "image",
              "title": null,
              "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
              "void": true,
            },
            "isVoid": true,
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "",
              },
            ],
            "object": "inline",
            "type": "image",
          },
          Object {
            "marks": Array [],
            "object": "text",
            "text": ".",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {},
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "quote
quote
quote
quote",
              },
            ],
            "object": "block",
            "type": "paragraph",
          },
        ],
        "object": "block",
        "type": "blockquote",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {},
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "quote",
              },
            ],
            "object": "block",
            "type": "paragraph",
          },
          Object {
            "data": Object {},
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "quoted quote",
                  },
                ],
                "object": "block",
                "type": "paragraph",
              },
            ],
            "object": "block",
            "type": "blockquote",
          },
        ],
        "object": "block",
        "type": "blockquote",
      },
      Object {
        "data": Object {
          "align": Array [
            "left",
            "right",
            "center",
          ],
        },
        "nodes": Array [
          Object {
            "data": Object {},
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "Left align",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "Right align",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "Center align",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
            ],
            "object": "block",
            "type": "tableRow",
          },
          Object {
            "data": Object {},
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "This",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "This",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "This",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
            ],
            "object": "block",
            "type": "tableRow",
          },
          Object {
            "data": Object {},
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "column",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "column",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "column",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
            ],
            "object": "block",
            "type": "tableRow",
          },
          Object {
            "data": Object {},
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "will",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "will",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "will",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
            ],
            "object": "block",
            "type": "tableRow",
          },
          Object {
            "data": Object {},
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "be",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "be",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "be",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
            ],
            "object": "block",
            "type": "tableRow",
          },
          Object {
            "data": Object {},
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "left",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "right",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "center",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
            ],
            "object": "block",
            "type": "tableRow",
          },
          Object {
            "data": Object {},
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "aligned",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "aligned",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [],
                    "object": "text",
                    "text": "aligned",
                  },
                ],
                "object": "block",
                "type": "tableCell",
              },
            ],
            "object": "block",
            "type": "tableRow",
          },
        ],
        "object": "block",
        "type": "table",
      },
      Object {
        "data": Object {
          "void": true,
        },
        "isVoid": true,
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "",
          },
        ],
        "object": "block",
        "type": "thematicBreak",
      },
      Object {
        "data": Object {
          "void": true,
        },
        "isVoid": true,
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "",
          },
        ],
        "object": "block",
        "type": "thematicBreak",
      },
      Object {
        "data": Object {
          "lang": "javascript",
          "meta": null,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;",
          },
        ],
        "object": "block",
        "type": "code",
      },
    ],
    "object": "document",
  },
  "object": "value",
}
`;

exports[`e2e legacy article.md 2`] = `
Immutable.Record {
  "annotations": Immutable.Map {},
  "data": Immutable.Map {},
  "document": Immutable.Record {
    "data": Immutable.Map {},
    "key": "0",
    "nodes": Immutable.List [
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 1,
        },
        "key": "1",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "2",
            "marks": Immutable.Set [],
            "text": "heading 1",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 2,
        },
        "key": "3",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "4",
            "marks": Immutable.Set [],
            "text": "heading 2",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 3,
        },
        "key": "5",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "6",
            "marks": Immutable.Set [],
            "text": "heading 3",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 4,
        },
        "key": "7",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "8",
            "marks": Immutable.Set [],
            "text": "heading 4",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 5,
        },
        "key": "9",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "10",
            "marks": Immutable.Set [],
            "text": "heading 5",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 6,
        },
        "key": "11",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "12",
            "marks": Immutable.Set [],
            "text": "heading 6",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "13",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "14",
            "marks": Immutable.Set [],
            "text": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "15",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "16",
            "marks": Immutable.Set [],
            "text": "aaaaaaaa",
          },
          Immutable.Record {
            "key": "17",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "strong",
              },
            ],
            "text": "bold",
          },
          Immutable.Record {
            "key": "18",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "emphasis",
              },
            ],
            "text": "emphasis",
          },
          Immutable.Record {
            "key": "19",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "delete",
              },
            ],
            "text": "delete",
          },
          Immutable.Record {
            "key": "20",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "inlineCode",
              },
            ],
            "text": "inline code",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "ordered": false,
          "start": null,
          "spread": true,
        },
        "key": "21",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "checked": null,
              "spread": true,
            },
            "key": "22",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "23",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "24",
                    "marks": Immutable.Set [],
                    "text": "list",
                  },
                ],
                "type": "paragraph",
              },
              Immutable.Record {
                "data": Immutable.Map {
                  "ordered": false,
                  "start": null,
                  "spread": false,
                },
                "key": "25",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "data": Immutable.Map {
                      "checked": null,
                      "spread": false,
                    },
                    "key": "26",
                    "nodes": Immutable.List [
                      Immutable.Record {
                        "data": Immutable.Map {},
                        "key": "27",
                        "nodes": Immutable.List [
                          Immutable.Record {
                            "key": "28",
                            "marks": Immutable.Set [],
                            "text": "list",
                          },
                        ],
                        "type": "paragraph",
                      },
                      Immutable.Record {
                        "data": Immutable.Map {
                          "ordered": false,
                          "start": null,
                          "spread": false,
                        },
                        "key": "29",
                        "nodes": Immutable.List [
                          Immutable.Record {
                            "data": Immutable.Map {
                              "checked": null,
                              "spread": false,
                            },
                            "key": "30",
                            "nodes": Immutable.List [
                              Immutable.Record {
                                "data": Immutable.Map {},
                                "key": "31",
                                "nodes": Immutable.List [
                                  Immutable.Record {
                                    "key": "32",
                                    "marks": Immutable.Set [],
                                    "text": "list",
                                  },
                                ],
                                "type": "paragraph",
                              },
                            ],
                            "type": "listItem",
                          },
                        ],
                        "type": "list",
                      },
                    ],
                    "type": "listItem",
                  },
                  Immutable.Record {
                    "data": Immutable.Map {
                      "checked": null,
                      "spread": false,
                    },
                    "key": "33",
                    "nodes": Immutable.List [
                      Immutable.Record {
                        "data": Immutable.Map {},
                        "key": "34",
                        "nodes": Immutable.List [
                          Immutable.Record {
                            "key": "35",
                            "marks": Immutable.Set [],
                            "text": "list",
                          },
                        ],
                        "type": "paragraph",
                      },
                    ],
                    "type": "listItem",
                  },
                  Immutable.Record {
                    "data": Immutable.Map {
                      "checked": null,
                      "spread": false,
                    },
                    "key": "36",
                    "nodes": Immutable.List [
                      Immutable.Record {
                        "data": Immutable.Map {},
                        "key": "37",
                        "nodes": Immutable.List [
                          Immutable.Record {
                            "key": "38",
                            "marks": Immutable.Set [],
                            "text": "list",
                          },
                        ],
                        "type": "paragraph",
                      },
                    ],
                    "type": "listItem",
                  },
                ],
                "type": "list",
              },
            ],
            "type": "listItem",
          },
          Immutable.Record {
            "data": Immutable.Map {
              "checked": false,
              "spread": false,
            },
            "key": "39",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "40",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "41",
                    "marks": Immutable.Set [],
                    "text": "not checked",
                  },
                ],
                "type": "paragraph",
              },
            ],
            "type": "listItem",
          },
          Immutable.Record {
            "data": Immutable.Map {
              "checked": true,
              "spread": false,
            },
            "key": "42",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "43",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "44",
                    "marks": Immutable.Set [],
                    "text": "checked",
                  },
                ],
                "type": "paragraph",
              },
            ],
            "type": "listItem",
          },
        ],
        "type": "list",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "ordered": true,
          "start": 1,
          "spread": false,
        },
        "key": "45",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "checked": null,
              "spread": false,
            },
            "key": "46",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "47",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "48",
                    "marks": Immutable.Set [],
                    "text": "ordered list",
                  },
                ],
                "type": "paragraph",
              },
            ],
            "type": "listItem",
          },
          Immutable.Record {
            "data": Immutable.Map {
              "checked": null,
              "spread": false,
            },
            "key": "49",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "50",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "51",
                    "marks": Immutable.Set [],
                    "text": "ordered list",
                  },
                ],
                "type": "paragraph",
              },
            ],
            "type": "listItem",
          },
          Immutable.Record {
            "data": Immutable.Map {
              "checked": null,
              "spread": false,
            },
            "key": "52",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "53",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "54",
                    "marks": Immutable.Set [],
                    "text": "ordered list",
                  },
                ],
                "type": "paragraph",
              },
              Immutable.Record {
                "data": Immutable.Map {
                  "ordered": true,
                  "start": 1,
                  "spread": false,
                },
                "key": "55",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "data": Immutable.Map {
                      "checked": null,
                      "spread": false,
                    },
                    "key": "56",
                    "nodes": Immutable.List [
                      Immutable.Record {
                        "data": Immutable.Map {},
                        "key": "57",
                        "nodes": Immutable.List [
                          Immutable.Record {
                            "key": "58",
                            "marks": Immutable.Set [],
                            "text": "aaa",
                          },
                        ],
                        "type": "paragraph",
                      },
                    ],
                    "type": "listItem",
                  },
                  Immutable.Record {
                    "data": Immutable.Map {
                      "checked": null,
                      "spread": false,
                    },
                    "key": "59",
                    "nodes": Immutable.List [
                      Immutable.Record {
                        "data": Immutable.Map {},
                        "key": "60",
                        "nodes": Immutable.List [
                          Immutable.Record {
                            "key": "61",
                            "marks": Immutable.Set [],
                            "text": "aaa",
                          },
                        ],
                        "type": "paragraph",
                      },
                      Immutable.Record {
                        "data": Immutable.Map {
                          "ordered": true,
                          "start": 1,
                          "spread": false,
                        },
                        "key": "62",
                        "nodes": Immutable.List [
                          Immutable.Record {
                            "data": Immutable.Map {
                              "checked": null,
                              "spread": false,
                            },
                            "key": "63",
                            "nodes": Immutable.List [
                              Immutable.Record {
                                "data": Immutable.Map {},
                                "key": "64",
                                "nodes": Immutable.List [
                                  Immutable.Record {
                                    "key": "65",
                                    "marks": Immutable.Set [],
                                    "text": "eeeee",
                                  },
                                ],
                                "type": "paragraph",
                              },
                            ],
                            "type": "listItem",
                          },
                          Immutable.Record {
                            "data": Immutable.Map {
                              "checked": null,
                              "spread": false,
                            },
                            "key": "66",
                            "nodes": Immutable.List [
                              Immutable.Record {
                                "data": Immutable.Map {},
                                "key": "67",
                                "nodes": Immutable.List [
                                  Immutable.Record {
                                    "key": "68",
                                    "marks": Immutable.Set [],
                                    "text": "eeeee",
                                  },
                                ],
                                "type": "paragraph",
                              },
                            ],
                            "type": "listItem",
                          },
                        ],
                        "type": "list",
                      },
                    ],
                    "type": "listItem",
                  },
                  Immutable.Record {
                    "data": Immutable.Map {
                      "checked": null,
                      "spread": false,
                    },
                    "key": "69",
                    "nodes": Immutable.List [
                      Immutable.Record {
                        "data": Immutable.Map {},
                        "key": "70",
                        "nodes": Immutable.List [
                          Immutable.Record {
                            "key": "71",
                            "marks": Immutable.Set [],
                            "text": "aaa",
                          },
                        ],
                        "type": "paragraph",
                      },
                    ],
                    "type": "listItem",
                  },
                ],
                "type": "list",
              },
            ],
            "type": "listItem",
          },
          Immutable.Record {
            "data": Immutable.Map {
              "checked": null,
              "spread": false,
            },
            "key": "72",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "73",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "74",
                    "marks": Immutable.Set [],
                    "text": "ordered list",
                  },
                ],
                "type": "paragraph",
              },
            ],
            "type": "listItem",
          },
        ],
        "type": "list",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "75",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "76",
            "marks": Immutable.Set [],
            "text": "This is ",
          },
          Immutable.Record {
            "data": Immutable.Map {
              "url": "https://github.com/",
              "title": null,
            },
            "key": "77",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "78",
                "marks": Immutable.Set [],
                "text": "link to GitHub.com",
              },
            ],
            "type": "link",
          },
          Immutable.Record {
            "key": "79",
            "marks": Immutable.Set [],
            "text": ".",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "80",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "81",
            "marks": Immutable.Set [],
            "text": "This is ",
          },
          Immutable.Record {
            "data": Immutable.Map {
              "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
              "title": null,
              "alt": "image",
              "void": true,
            },
            "key": "82",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "83",
                "marks": Immutable.Set [],
                "text": "",
              },
            ],
            "type": "image",
          },
          Immutable.Record {
            "key": "84",
            "marks": Immutable.Set [],
            "text": ".",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "85",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {},
            "key": "86",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "87",
                "marks": Immutable.Set [],
                "text": "quote
quote
quote
quote",
              },
            ],
            "type": "paragraph",
          },
        ],
        "type": "blockquote",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "88",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {},
            "key": "89",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "90",
                "marks": Immutable.Set [],
                "text": "quote",
              },
            ],
            "type": "paragraph",
          },
          Immutable.Record {
            "data": Immutable.Map {},
            "key": "91",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "92",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "93",
                    "marks": Immutable.Set [],
                    "text": "quoted quote",
                  },
                ],
                "type": "paragraph",
              },
            ],
            "type": "blockquote",
          },
        ],
        "type": "blockquote",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "align": Array [
            "left",
            "right",
            "center",
          ],
        },
        "key": "94",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {},
            "key": "95",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "96",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "97",
                    "marks": Immutable.Set [],
                    "text": "Left align",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "98",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "99",
                    "marks": Immutable.Set [],
                    "text": "Right align",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "100",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "101",
                    "marks": Immutable.Set [],
                    "text": "Center align",
                  },
                ],
                "type": "tableCell",
              },
            ],
            "type": "tableRow",
          },
          Immutable.Record {
            "data": Immutable.Map {},
            "key": "102",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "103",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "104",
                    "marks": Immutable.Set [],
                    "text": "This",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "105",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "106",
                    "marks": Immutable.Set [],
                    "text": "This",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "107",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "108",
                    "marks": Immutable.Set [],
                    "text": "This",
                  },
                ],
                "type": "tableCell",
              },
            ],
            "type": "tableRow",
          },
          Immutable.Record {
            "data": Immutable.Map {},
            "key": "109",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "110",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "111",
                    "marks": Immutable.Set [],
                    "text": "column",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "112",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "113",
                    "marks": Immutable.Set [],
                    "text": "column",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "114",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "115",
                    "marks": Immutable.Set [],
                    "text": "column",
                  },
                ],
                "type": "tableCell",
              },
            ],
            "type": "tableRow",
          },
          Immutable.Record {
            "data": Immutable.Map {},
            "key": "116",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "117",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "118",
                    "marks": Immutable.Set [],
                    "text": "will",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "119",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "120",
                    "marks": Immutable.Set [],
                    "text": "will",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "121",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "122",
                    "marks": Immutable.Set [],
                    "text": "will",
                  },
                ],
                "type": "tableCell",
              },
            ],
            "type": "tableRow",
          },
          Immutable.Record {
            "data": Immutable.Map {},
            "key": "123",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "124",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "125",
                    "marks": Immutable.Set [],
                    "text": "be",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "126",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "127",
                    "marks": Immutable.Set [],
                    "text": "be",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "128",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "129",
                    "marks": Immutable.Set [],
                    "text": "be",
                  },
                ],
                "type": "tableCell",
              },
            ],
            "type": "tableRow",
          },
          Immutable.Record {
            "data": Immutable.Map {},
            "key": "130",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "131",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "132",
                    "marks": Immutable.Set [],
                    "text": "left",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "133",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "134",
                    "marks": Immutable.Set [],
                    "text": "right",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "135",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "136",
                    "marks": Immutable.Set [],
                    "text": "center",
                  },
                ],
                "type": "tableCell",
              },
            ],
            "type": "tableRow",
          },
          Immutable.Record {
            "data": Immutable.Map {},
            "key": "137",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "138",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "139",
                    "marks": Immutable.Set [],
                    "text": "aligned",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "140",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "141",
                    "marks": Immutable.Set [],
                    "text": "aligned",
                  },
                ],
                "type": "tableCell",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "142",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "143",
                    "marks": Immutable.Set [],
                    "text": "aligned",
                  },
                ],
                "type": "tableCell",
              },
            ],
            "type": "tableRow",
          },
        ],
        "type": "table",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "void": true,
        },
        "key": "144",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "145",
            "marks": Immutable.Set [],
            "text": "",
          },
        ],
        "type": "thematicBreak",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "void": true,
        },
        "key": "146",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "147",
            "marks": Immutable.Set [],
            "text": "",
          },
        ],
        "type": "thematicBreak",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "lang": "javascript",
          "meta": null,
        },
        "key": "148",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "149",
            "marks": Immutable.Set [],
            "text": "function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;",
          },
        ],
        "type": "code",
      },
    ],
  },
  "selection": Immutable.Record {
    "anchor": Immutable.Record {
      "key": "2",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "focus": Immutable.Record {
      "key": "2",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "isFocused": false,
    "marks": null,
  },
}
`;

exports[`e2e legacy article.md 3`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 1",
        },
      ],
      "depth": 1,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 2",
        },
      ],
      "depth": 2,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 3",
        },
      ],
      "depth": 3,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 4",
        },
      ],
      "depth": 4,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 5",
        },
      ],
      "depth": 5,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "heading 6",
        },
      ],
      "depth": 6,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "aaaaaaaa",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "bold",
            },
          ],
          "type": "strong",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "emphasis",
            },
          ],
          "type": "emphasis",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "delete",
            },
          ],
          "type": "delete",
        },
        Object {
          "type": "inlineCode",
          "value": "inline code",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "list",
                },
              ],
              "type": "paragraph",
            },
            Object {
              "children": Array [
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "list",
                        },
                      ],
                      "type": "paragraph",
                    },
                    Object {
                      "children": Array [
                        Object {
                          "checked": null,
                          "children": Array [
                            Object {
                              "children": Array [
                                Object {
                                  "type": "text",
                                  "value": "list",
                                },
                              ],
                              "type": "paragraph",
                            },
                          ],
                          "spread": false,
                          "type": "listItem",
                        },
                      ],
                      "ordered": false,
                      "spread": false,
                      "start": null,
                      "type": "list",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "list",
                        },
                      ],
                      "type": "paragraph",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "list",
                        },
                      ],
                      "type": "paragraph",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
              ],
              "ordered": false,
              "spread": false,
              "start": null,
              "type": "list",
            },
          ],
          "spread": true,
          "type": "listItem",
        },
        Object {
          "checked": false,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "not checked",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
        Object {
          "checked": true,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "checked",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
      ],
      "ordered": false,
      "spread": true,
      "start": null,
      "type": "list",
    },
    Object {
      "children": Array [
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "ordered list",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "ordered list",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "ordered list",
                },
              ],
              "type": "paragraph",
            },
            Object {
              "children": Array [
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "aaa",
                        },
                      ],
                      "type": "paragraph",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "aaa",
                        },
                      ],
                      "type": "paragraph",
                    },
                    Object {
                      "children": Array [
                        Object {
                          "checked": null,
                          "children": Array [
                            Object {
                              "children": Array [
                                Object {
                                  "type": "text",
                                  "value": "eeeee",
                                },
                              ],
                              "type": "paragraph",
                            },
                          ],
                          "spread": false,
                          "type": "listItem",
                        },
                        Object {
                          "checked": null,
                          "children": Array [
                            Object {
                              "children": Array [
                                Object {
                                  "type": "text",
                                  "value": "eeeee",
                                },
                              ],
                              "type": "paragraph",
                            },
                          ],
                          "spread": false,
                          "type": "listItem",
                        },
                      ],
                      "ordered": true,
                      "spread": false,
                      "start": 1,
                      "type": "list",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
                Object {
                  "checked": null,
                  "children": Array [
                    Object {
                      "children": Array [
                        Object {
                          "type": "text",
                          "value": "aaa",
                        },
                      ],
                      "type": "paragraph",
                    },
                  ],
                  "spread": false,
                  "type": "listItem",
                },
              ],
              "ordered": true,
              "spread": false,
              "start": 1,
              "type": "list",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "ordered list",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
      ],
      "ordered": true,
      "spread": false,
      "start": 1,
      "type": "list",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "This is ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "link to GitHub.com",
            },
          ],
          "title": null,
          "type": "link",
          "url": "https://github.com/",
        },
        Object {
          "type": "text",
          "value": ".",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "This is ",
        },
        Object {
          "alt": "image",
          "title": null,
          "type": "image",
          "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
        },
        Object {
          "type": "text",
          "value": ".",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "quote
quote
quote
quote",
            },
          ],
          "type": "paragraph",
        },
      ],
      "type": "blockquote",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "quote",
            },
          ],
          "type": "paragraph",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "quoted quote",
                },
              ],
              "type": "paragraph",
            },
          ],
          "type": "blockquote",
        },
      ],
      "type": "blockquote",
    },
    Object {
      "align": Array [
        "left",
        "right",
        "center",
      ],
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "Left align",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "Right align",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "Center align",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "This",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "This",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "This",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "column",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "column",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "column",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "will",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "will",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "will",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "be",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "be",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "be",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "left",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "right",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "center",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "aligned",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "aligned",
                },
              ],
              "type": "tableCell",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "aligned",
                },
              ],
              "type": "tableCell",
            },
          ],
          "type": "tableRow",
        },
      ],
      "type": "table",
    },
    Object {
      "type": "thematicBreak",
    },
    Object {
      "type": "thematicBreak",
    },
    Object {
      "lang": "javascript",
      "meta": null,
      "type": "code",
      "value": "function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;",
    },
  ],
  "type": "root",
}
`;

exports[`e2e legacy article.md 4`] = `
"# heading 1

## heading 2

### heading 3

#### heading 4

##### heading 5

###### heading 6

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

aaaaaaaa**bold**_emphasis_~~delete~~\`inline code\`

-   list

    -   list
        -   list
    -   list
    -   list

-   [ ] not checked

-   [x] checked

1.  ordered list
2.  ordered list
3.  ordered list
    1.  aaa
    2.  aaa
        1.  eeeee
        2.  eeeee
    3.  aaa
4.  ordered list

This is [link to GitHub.com](https://github.com/).

This is ![image](https://github.githubassets.com/images/modules/logos_page/Octocat.png).

> quote
> quote
> quote
> quote

> quote
>
> > quoted quote

| Left align | Right align | Center align |
| :--------- | ----------: | :----------: |
| This       |        This |     This     |
| column     |      column |    column    |
| will       |        will |     will     |
| be         |          be |      be      |
| left       |       right |    center    |
| aligned    |     aligned |    aligned   |

* * *

* * *

\`\`\`javascript
function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;
\`\`\`
"
`;

exports[`e2e legacy node-break.md 1`] = `
Object {
  "document": Object {
    "nodes": Array [
      Object {
        "data": Object {
          "void": true,
        },
        "isVoid": true,
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "",
          },
        ],
        "object": "block",
        "type": "thematicBreak",
      },
      Object {
        "data": Object {
          "void": true,
        },
        "isVoid": true,
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "",
          },
        ],
        "object": "block",
        "type": "thematicBreak",
      },
    ],
    "object": "document",
  },
  "object": "value",
}
`;

exports[`e2e legacy node-break.md 2`] = `
Immutable.Record {
  "annotations": Immutable.Map {},
  "data": Immutable.Map {},
  "document": Immutable.Record {
    "data": Immutable.Map {},
    "key": "150",
    "nodes": Immutable.List [
      Immutable.Record {
        "data": Immutable.Map {
          "void": true,
        },
        "key": "151",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "152",
            "marks": Immutable.Set [],
            "text": "",
          },
        ],
        "type": "thematicBreak",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "void": true,
        },
        "key": "153",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "154",
            "marks": Immutable.Set [],
            "text": "",
          },
        ],
        "type": "thematicBreak",
      },
    ],
  },
  "selection": Immutable.Record {
    "anchor": Immutable.Record {
      "key": "152",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "focus": Immutable.Record {
      "key": "152",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "isFocused": false,
    "marks": null,
  },
}
`;

exports[`e2e legacy node-break.md 3`] = `
Object {
  "children": Array [
    Object {
      "type": "thematicBreak",
    },
    Object {
      "type": "thematicBreak",
    },
  ],
  "type": "root",
}
`;

exports[`e2e legacy node-break.md 4`] = `
"* * *

* * *
"
`;

exports[`e2e legacy node-code.md 1`] = `
Object {
  "document": Object {
    "nodes": Array [
      Object {
        "data": Object {
          "lang": "css",
          "meta": "metadata=\\"12345\\"",
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "@font-face {
  font-family: Chunkfive;
  src: url(\\"Chunkfive.otf\\");
}

body,
.usertext {
  color: #f0f0f0;
  background: #600;
  font-family: Chunkfive, sans;
  --heading-1: 30px/32px Helvetica, sans-serif;
}

@import url(print.css);
@media print {
  a[href^=\\"http\\"]::after {
    content: attr(href);
  }
}",
          },
        ],
        "object": "block",
        "type": "code",
      },
      Object {
        "data": Object {
          "lang": "javascript",
          "meta": null,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;",
          },
        ],
        "object": "block",
        "type": "code",
      },
      Object {
        "data": Object {
          "lang": "typescript",
          "meta": null,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "class MyClass {
  public static myValue: string;
  constructor(init: string) {
    this.myValue = init;
  }
}
import fs = require(\\"fs\\");
module MyModule {
  export interface MyInterface extends Other {
    myProperty: any;
  }
}
declare magicNumber number;
myArray.forEach(() => { }); // fat arrow syntax",
          },
        ],
        "object": "block",
        "type": "code",
      },
    ],
    "object": "document",
  },
  "object": "value",
}
`;

exports[`e2e legacy node-code.md 2`] = `
Immutable.Record {
  "annotations": Immutable.Map {},
  "data": Immutable.Map {},
  "document": Immutable.Record {
    "data": Immutable.Map {},
    "key": "155",
    "nodes": Immutable.List [
      Immutable.Record {
        "data": Immutable.Map {
          "lang": "css",
          "meta": "metadata=\\"12345\\"",
        },
        "key": "156",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "157",
            "marks": Immutable.Set [],
            "text": "@font-face {
  font-family: Chunkfive;
  src: url(\\"Chunkfive.otf\\");
}

body,
.usertext {
  color: #f0f0f0;
  background: #600;
  font-family: Chunkfive, sans;
  --heading-1: 30px/32px Helvetica, sans-serif;
}

@import url(print.css);
@media print {
  a[href^=\\"http\\"]::after {
    content: attr(href);
  }
}",
          },
        ],
        "type": "code",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "lang": "javascript",
          "meta": null,
        },
        "key": "158",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "159",
            "marks": Immutable.Set [],
            "text": "function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;",
          },
        ],
        "type": "code",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "lang": "typescript",
          "meta": null,
        },
        "key": "160",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "161",
            "marks": Immutable.Set [],
            "text": "class MyClass {
  public static myValue: string;
  constructor(init: string) {
    this.myValue = init;
  }
}
import fs = require(\\"fs\\");
module MyModule {
  export interface MyInterface extends Other {
    myProperty: any;
  }
}
declare magicNumber number;
myArray.forEach(() => { }); // fat arrow syntax",
          },
        ],
        "type": "code",
      },
    ],
  },
  "selection": Immutable.Record {
    "anchor": Immutable.Record {
      "key": "157",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "focus": Immutable.Record {
      "key": "157",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "isFocused": false,
    "marks": null,
  },
}
`;

exports[`e2e legacy node-code.md 3`] = `
Object {
  "children": Array [
    Object {
      "lang": "css",
      "meta": "metadata=\\"12345\\"",
      "type": "code",
      "value": "@font-face {
  font-family: Chunkfive;
  src: url(\\"Chunkfive.otf\\");
}

body,
.usertext {
  color: #f0f0f0;
  background: #600;
  font-family: Chunkfive, sans;
  --heading-1: 30px/32px Helvetica, sans-serif;
}

@import url(print.css);
@media print {
  a[href^=\\"http\\"]::after {
    content: attr(href);
  }
}",
    },
    Object {
      "lang": "javascript",
      "meta": null,
      "type": "code",
      "value": "function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;",
    },
    Object {
      "lang": "typescript",
      "meta": null,
      "type": "code",
      "value": "class MyClass {
  public static myValue: string;
  constructor(init: string) {
    this.myValue = init;
  }
}
import fs = require(\\"fs\\");
module MyModule {
  export interface MyInterface extends Other {
    myProperty: any;
  }
}
declare magicNumber number;
myArray.forEach(() => { }); // fat arrow syntax",
    },
  ],
  "type": "root",
}
`;

exports[`e2e legacy node-code.md 4`] = `
"\`\`\`css metadata=\\"12345\\"
@font-face {
  font-family: Chunkfive;
  src: url(\\"Chunkfive.otf\\");
}

body,
.usertext {
  color: #f0f0f0;
  background: #600;
  font-family: Chunkfive, sans;
  --heading-1: 30px/32px Helvetica, sans-serif;
}

@import url(print.css);
@media print {
  a[href^=\\"http\\"]::after {
    content: attr(href);
  }
}
\`\`\`

\`\`\`javascript
function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;
\`\`\`

\`\`\`typescript
class MyClass {
  public static myValue: string;
  constructor(init: string) {
    this.myValue = init;
  }
}
import fs = require(\\"fs\\");
module MyModule {
  export interface MyInterface extends Other {
    myProperty: any;
  }
}
declare magicNumber number;
myArray.forEach(() => { }); // fat arrow syntax
\`\`\`
"
`;

exports[`e2e legacy node-heading.md 1`] = `
Object {
  "document": Object {
    "nodes": Array [
      Object {
        "data": Object {
          "depth": 1,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "Alpha",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "aaaa",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {
          "depth": 2,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "Bravo",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "bbbb",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {
          "depth": 3,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "Charlie",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "cccc",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {
          "depth": 2,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "Delta",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "dddd",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {
          "depth": 3,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "E",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {
          "depth": 4,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "F",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {
          "depth": 5,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "G",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {
          "depth": 6,
        },
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "H",
          },
        ],
        "object": "block",
        "type": "heading",
      },
    ],
    "object": "document",
  },
  "object": "value",
}
`;

exports[`e2e legacy node-heading.md 2`] = `
Immutable.Record {
  "annotations": Immutable.Map {},
  "data": Immutable.Map {},
  "document": Immutable.Record {
    "data": Immutable.Map {},
    "key": "162",
    "nodes": Immutable.List [
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 1,
        },
        "key": "163",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "164",
            "marks": Immutable.Set [],
            "text": "Alpha",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "165",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "166",
            "marks": Immutable.Set [],
            "text": "aaaa",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 2,
        },
        "key": "167",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "168",
            "marks": Immutable.Set [],
            "text": "Bravo",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "169",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "170",
            "marks": Immutable.Set [],
            "text": "bbbb",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 3,
        },
        "key": "171",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "172",
            "marks": Immutable.Set [],
            "text": "Charlie",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "173",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "174",
            "marks": Immutable.Set [],
            "text": "cccc",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 2,
        },
        "key": "175",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "176",
            "marks": Immutable.Set [],
            "text": "Delta",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "177",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "178",
            "marks": Immutable.Set [],
            "text": "dddd",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 3,
        },
        "key": "179",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "180",
            "marks": Immutable.Set [],
            "text": "E",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 4,
        },
        "key": "181",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "182",
            "marks": Immutable.Set [],
            "text": "F",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 5,
        },
        "key": "183",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "184",
            "marks": Immutable.Set [],
            "text": "G",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 6,
        },
        "key": "185",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "186",
            "marks": Immutable.Set [],
            "text": "H",
          },
        ],
        "type": "heading",
      },
    ],
  },
  "selection": Immutable.Record {
    "anchor": Immutable.Record {
      "key": "164",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "focus": Immutable.Record {
      "key": "164",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "isFocused": false,
    "marks": null,
  },
}
`;

exports[`e2e legacy node-heading.md 3`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Alpha",
        },
      ],
      "depth": 1,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "aaaa",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Bravo",
        },
      ],
      "depth": 2,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "bbbb",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Charlie",
        },
      ],
      "depth": 3,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "cccc",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Delta",
        },
      ],
      "depth": 2,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "dddd",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "E",
        },
      ],
      "depth": 3,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "F",
        },
      ],
      "depth": 4,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "G",
        },
      ],
      "depth": 5,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "H",
        },
      ],
      "depth": 6,
      "type": "heading",
    },
  ],
  "type": "root",
}
`;

exports[`e2e legacy node-heading.md 4`] = `
"# Alpha

aaaa

## Bravo

bbbb

### Charlie

cccc

## Delta

dddd

### E

#### F

##### G

###### H
"
`;

exports[`e2e legacy node-ml.md 1`] = `
Object {
  "document": Object {
    "nodes": Array [
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "<div>
<span>This is <b>html</b></span>
</div>",
          },
        ],
        "object": "block",
        "type": "html",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "<!--comment-->",
          },
        ],
        "object": "block",
        "type": "html",
      },
      Object {
        "data": Object {
          "void": true,
        },
        "isVoid": true,
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "",
          },
        ],
        "object": "block",
        "type": "thematicBreak",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "title: \\"This is yaml\\"
date: 2020-04-30 22:34
categories: ",
          },
          Object {
            "data": Object {
              "identifier": "javascript, react",
              "label": "JavaScript, React",
              "referenceType": "shortcut",
            },
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "JavaScript, React",
              },
            ],
            "object": "inline",
            "type": "linkReference",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {
          "void": true,
        },
        "isVoid": true,
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "",
          },
        ],
        "object": "block",
        "type": "thematicBreak",
      },
    ],
    "object": "document",
  },
  "object": "value",
}
`;

exports[`e2e legacy node-ml.md 2`] = `
Immutable.Record {
  "annotations": Immutable.Map {},
  "data": Immutable.Map {},
  "document": Immutable.Record {
    "data": Immutable.Map {},
    "key": "187",
    "nodes": Immutable.List [
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "188",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "189",
            "marks": Immutable.Set [],
            "text": "<div>
<span>This is <b>html</b></span>
</div>",
          },
        ],
        "type": "html",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "190",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "191",
            "marks": Immutable.Set [],
            "text": "<!--comment-->",
          },
        ],
        "type": "html",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "void": true,
        },
        "key": "192",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "193",
            "marks": Immutable.Set [],
            "text": "",
          },
        ],
        "type": "thematicBreak",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "194",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "195",
            "marks": Immutable.Set [],
            "text": "title: \\"This is yaml\\"
date: 2020-04-30 22:34
categories: ",
          },
          Immutable.Record {
            "data": Immutable.Map {
              "referenceType": "shortcut",
              "identifier": "javascript, react",
              "label": "JavaScript, React",
            },
            "key": "196",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "197",
                "marks": Immutable.Set [],
                "text": "JavaScript, React",
              },
            ],
            "type": "linkReference",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "void": true,
        },
        "key": "198",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "199",
            "marks": Immutable.Set [],
            "text": "",
          },
        ],
        "type": "thematicBreak",
      },
    ],
  },
  "selection": Immutable.Record {
    "anchor": Immutable.Record {
      "key": "189",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "focus": Immutable.Record {
      "key": "189",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "isFocused": false,
    "marks": null,
  },
}
`;

exports[`e2e legacy node-ml.md 3`] = `
Object {
  "children": Array [
    Object {
      "type": "html",
      "value": "<div>
<span>This is <b>html</b></span>
</div>",
    },
    Object {
      "type": "html",
      "value": "<!--comment-->",
    },
    Object {
      "type": "thematicBreak",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "title: \\"This is yaml\\"
date: 2020-04-30 22:34
categories: ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "JavaScript, React",
            },
          ],
          "identifier": "javascript, react",
          "label": "JavaScript, React",
          "referenceType": "shortcut",
          "type": "linkReference",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "type": "thematicBreak",
    },
  ],
  "type": "root",
}
`;

exports[`e2e legacy node-ml.md 4`] = `
"<div>
<span>This is <b>html</b></span>
</div>

<!--comment-->

* * *

title: \\"This is yaml\\"
date: 2020-04-30 22:34
categories: [JavaScript, React]

* * *
"
`;

exports[`e2e legacy node-paragraph.md 1`] = `
Object {
  "document": Object {
    "nodes": Array [
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
    ],
    "object": "document",
  },
  "object": "value",
}
`;

exports[`e2e legacy node-paragraph.md 2`] = `
Immutable.Record {
  "annotations": Immutable.Map {},
  "data": Immutable.Map {},
  "document": Immutable.Record {
    "data": Immutable.Map {},
    "key": "200",
    "nodes": Immutable.List [
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "201",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "202",
            "marks": Immutable.Set [],
            "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "203",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "204",
            "marks": Immutable.Set [],
            "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
          },
        ],
        "type": "paragraph",
      },
    ],
  },
  "selection": Immutable.Record {
    "anchor": Immutable.Record {
      "key": "202",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "focus": Immutable.Record {
      "key": "202",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "isFocused": false,
    "marks": null,
  },
}
`;

exports[`e2e legacy node-paragraph.md 3`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
        },
      ],
      "type": "paragraph",
    },
  ],
  "type": "root",
}
`;

exports[`e2e legacy node-paragraph.md 4`] = `
"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
"
`;

exports[`e2e legacy node-phrasing-1.md 1`] = `
Object {
  "document": Object {
    "nodes": Array [
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "aaa ",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "strong",
              },
            ],
            "object": "text",
            "text": "aaaaaaa",
          },
          Object {
            "marks": Array [],
            "object": "text",
            "text": " aaaaaa ",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "emphasis",
              },
            ],
            "object": "text",
            "text": "aaaaaaaa",
          },
          Object {
            "marks": Array [],
            "object": "text",
            "text": " aaaaaaaa ",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "delete",
              },
            ],
            "object": "text",
            "text": "aaaaaaa",
          },
          Object {
            "marks": Array [],
            "object": "text",
            "text": " aaaa ",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "inlineCode",
              },
            ],
            "object": "text",
            "text": "aaaaaaaa",
          },
          Object {
            "marks": Array [],
            "object": "text",
            "text": " aaa
aaaaaaaaaa ",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "emphasis",
              },
            ],
            "object": "text",
            "text": "aa ",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "emphasis",
              },
              Object {
                "object": "mark",
                "type": "strong",
              },
            ],
            "object": "text",
            "text": "a ",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "emphasis",
              },
              Object {
                "object": "mark",
                "type": "strong",
              },
              Object {
                "object": "mark",
                "type": "delete",
              },
            ],
            "object": "text",
            "text": "aa",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "emphasis",
              },
              Object {
                "object": "mark",
                "type": "strong",
              },
            ],
            "object": "text",
            "text": " aa ",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "emphasis",
              },
              Object {
                "object": "mark",
                "type": "strong",
              },
              Object {
                "object": "mark",
                "type": "inlineCode",
              },
            ],
            "object": "text",
            "text": "aaa",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "emphasis",
              },
              Object {
                "object": "mark",
                "type": "strong",
              },
            ],
            "object": "text",
            "text": " aaaaa",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "emphasis",
              },
            ],
            "object": "text",
            "text": " aaaa",
          },
          Object {
            "marks": Array [],
            "object": "text",
            "text": " aa",
          },
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "inlineCode",
              },
            ],
            "object": "text",
            "text": "a*aa*aa_aa_a~~aa~~a",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {
          "depth": 1,
        },
        "nodes": Array [
          Object {
            "marks": Array [
              Object {
                "object": "mark",
                "type": "strong",
              },
            ],
            "object": "text",
            "text": "heading",
          },
        ],
        "object": "block",
        "type": "heading",
      },
      Object {
        "data": Object {
          "ordered": false,
          "spread": false,
          "start": null,
        },
        "nodes": Array [
          Object {
            "data": Object {
              "checked": null,
              "spread": false,
            },
            "nodes": Array [
              Object {
                "data": Object {},
                "nodes": Array [
                  Object {
                    "marks": Array [
                      Object {
                        "object": "mark",
                        "type": "strong",
                      },
                    ],
                    "object": "text",
                    "text": "list",
                  },
                ],
                "object": "block",
                "type": "paragraph",
              },
            ],
            "object": "block",
            "type": "listItem",
          },
        ],
        "object": "block",
        "type": "list",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {},
            "nodes": Array [
              Object {
                "marks": Array [
                  Object {
                    "object": "mark",
                    "type": "strong",
                  },
                ],
                "object": "text",
                "text": "quote",
              },
            ],
            "object": "block",
            "type": "paragraph",
          },
        ],
        "object": "block",
        "type": "blockquote",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {
              "title": null,
              "url": "https://github.com/",
            },
            "nodes": Array [
              Object {
                "marks": Array [
                  Object {
                    "object": "mark",
                    "type": "strong",
                  },
                ],
                "object": "text",
                "text": "link to GitHub.com",
              },
            ],
            "object": "inline",
            "type": "link",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {
              "title": null,
              "url": "https://github.com/",
            },
            "nodes": Array [
              Object {
                "marks": Array [
                  Object {
                    "object": "mark",
                    "type": "strong",
                  },
                ],
                "object": "text",
                "text": "link to GitHub.com",
              },
            ],
            "object": "inline",
            "type": "link",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {
              "alt": "image",
              "title": null,
              "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
              "void": true,
            },
            "isVoid": true,
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "",
              },
            ],
            "object": "inline",
            "type": "image",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
    ],
    "object": "document",
  },
  "object": "value",
}
`;

exports[`e2e legacy node-phrasing-1.md 2`] = `
Immutable.Record {
  "annotations": Immutable.Map {},
  "data": Immutable.Map {},
  "document": Immutable.Record {
    "data": Immutable.Map {},
    "key": "205",
    "nodes": Immutable.List [
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "206",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "207",
            "marks": Immutable.Set [],
            "text": "aaa ",
          },
          Immutable.Record {
            "key": "208",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "strong",
              },
            ],
            "text": "aaaaaaa",
          },
          Immutable.Record {
            "key": "209",
            "marks": Immutable.Set [],
            "text": " aaaaaa ",
          },
          Immutable.Record {
            "key": "210",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "emphasis",
              },
            ],
            "text": "aaaaaaaa",
          },
          Immutable.Record {
            "key": "211",
            "marks": Immutable.Set [],
            "text": " aaaaaaaa ",
          },
          Immutable.Record {
            "key": "212",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "delete",
              },
            ],
            "text": "aaaaaaa",
          },
          Immutable.Record {
            "key": "213",
            "marks": Immutable.Set [],
            "text": " aaaa ",
          },
          Immutable.Record {
            "key": "214",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "inlineCode",
              },
            ],
            "text": "aaaaaaaa",
          },
          Immutable.Record {
            "key": "215",
            "marks": Immutable.Set [],
            "text": " aaa
aaaaaaaaaa ",
          },
          Immutable.Record {
            "key": "216",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "emphasis",
              },
            ],
            "text": "aa ",
          },
          Immutable.Record {
            "key": "217",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "emphasis",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "strong",
              },
            ],
            "text": "a ",
          },
          Immutable.Record {
            "key": "218",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "emphasis",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "strong",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "delete",
              },
            ],
            "text": "aa",
          },
          Immutable.Record {
            "key": "219",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "emphasis",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "strong",
              },
            ],
            "text": " aa ",
          },
          Immutable.Record {
            "key": "220",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "emphasis",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "strong",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "inlineCode",
              },
            ],
            "text": "aaa",
          },
          Immutable.Record {
            "key": "221",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "emphasis",
              },
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "strong",
              },
            ],
            "text": " aaaaa",
          },
          Immutable.Record {
            "key": "222",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "emphasis",
              },
            ],
            "text": " aaaa",
          },
          Immutable.Record {
            "key": "223",
            "marks": Immutable.Set [],
            "text": " aa",
          },
          Immutable.Record {
            "key": "224",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "inlineCode",
              },
            ],
            "text": "a*aa*aa_aa_a~~aa~~a",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "depth": 1,
        },
        "key": "225",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "226",
            "marks": Immutable.Set [
              Immutable.Record {
                "data": Immutable.Map {},
                "type": "strong",
              },
            ],
            "text": "heading",
          },
        ],
        "type": "heading",
      },
      Immutable.Record {
        "data": Immutable.Map {
          "ordered": false,
          "start": null,
          "spread": false,
        },
        "key": "227",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "checked": null,
              "spread": false,
            },
            "key": "228",
            "nodes": Immutable.List [
              Immutable.Record {
                "data": Immutable.Map {},
                "key": "229",
                "nodes": Immutable.List [
                  Immutable.Record {
                    "key": "230",
                    "marks": Immutable.Set [
                      Immutable.Record {
                        "data": Immutable.Map {},
                        "type": "strong",
                      },
                    ],
                    "text": "list",
                  },
                ],
                "type": "paragraph",
              },
            ],
            "type": "listItem",
          },
        ],
        "type": "list",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "231",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {},
            "key": "232",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "233",
                "marks": Immutable.Set [
                  Immutable.Record {
                    "data": Immutable.Map {},
                    "type": "strong",
                  },
                ],
                "text": "quote",
              },
            ],
            "type": "paragraph",
          },
        ],
        "type": "blockquote",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "234",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "url": "https://github.com/",
              "title": null,
            },
            "key": "235",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "236",
                "marks": Immutable.Set [
                  Immutable.Record {
                    "data": Immutable.Map {},
                    "type": "strong",
                  },
                ],
                "text": "link to GitHub.com",
              },
            ],
            "type": "link",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "237",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "url": "https://github.com/",
              "title": null,
            },
            "key": "238",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "239",
                "marks": Immutable.Set [
                  Immutable.Record {
                    "data": Immutable.Map {},
                    "type": "strong",
                  },
                ],
                "text": "link to GitHub.com",
              },
            ],
            "type": "link",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "240",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
              "title": null,
              "alt": "image",
              "void": true,
            },
            "key": "241",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "242",
                "marks": Immutable.Set [],
                "text": "",
              },
            ],
            "type": "image",
          },
        ],
        "type": "paragraph",
      },
    ],
  },
  "selection": Immutable.Record {
    "anchor": Immutable.Record {
      "key": "207",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "focus": Immutable.Record {
      "key": "207",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
      ],
    },
    "isFocused": false,
    "marks": null,
  },
}
`;

exports[`e2e legacy node-phrasing-1.md 3`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "aaa ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "aaaaaaa",
            },
          ],
          "type": "strong",
        },
        Object {
          "type": "text",
          "value": " aaaaaa ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "aaaaaaaa",
            },
          ],
          "type": "emphasis",
        },
        Object {
          "type": "text",
          "value": " aaaaaaaa ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "aaaaaaa",
            },
          ],
          "type": "delete",
        },
        Object {
          "type": "text",
          "value": " aaaa ",
        },
        Object {
          "type": "inlineCode",
          "value": "aaaaaaaa",
        },
        Object {
          "type": "text",
          "value": " aaa
aaaaaaaaaa ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "aa ",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "a ",
                },
                Object {
                  "children": Array [
                    Object {
                      "type": "text",
                      "value": "aa",
                    },
                  ],
                  "type": "delete",
                },
                Object {
                  "type": "text",
                  "value": " aa ",
                },
                Object {
                  "type": "inlineCode",
                  "value": "aaa",
                },
                Object {
                  "type": "text",
                  "value": " aaaaa",
                },
              ],
              "type": "strong",
            },
            Object {
              "type": "text",
              "value": " aaaa",
            },
          ],
          "type": "emphasis",
        },
        Object {
          "type": "text",
          "value": " aa",
        },
        Object {
          "type": "inlineCode",
          "value": "a*aa*aa_aa_a~~aa~~a",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "heading",
            },
          ],
          "type": "strong",
        },
      ],
      "depth": 1,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "type": "text",
                      "value": "list",
                    },
                  ],
                  "type": "strong",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
      ],
      "ordered": false,
      "spread": false,
      "start": null,
      "type": "list",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "quote",
                },
              ],
              "type": "strong",
            },
          ],
          "type": "paragraph",
        },
      ],
      "type": "blockquote",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "link to GitHub.com",
                },
              ],
              "type": "strong",
            },
          ],
          "title": null,
          "type": "link",
          "url": "https://github.com/",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "link to GitHub.com",
                },
              ],
              "type": "strong",
            },
          ],
          "title": null,
          "type": "link",
          "url": "https://github.com/",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "alt": "image",
          "title": null,
          "type": "image",
          "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
        },
      ],
      "type": "paragraph",
    },
  ],
  "type": "root",
}
`;

exports[`e2e legacy node-phrasing-1.md 4`] = `
"aaa **aaaaaaa** aaaaaa _aaaaaaaa_ aaaaaaaa ~~aaaaaaa~~ aaaa \`aaaaaaaa\` aaa
aaaaaaaaaa _aa **a ~~aa~~ aa \`aaa\` aaaaa** aaaa_ aa\`a*aa*aa_aa_a~~aa~~a\`

# **heading**

-   **list**

> **quote**

[**link to GitHub.com**](https://github.com/)

[**link to GitHub.com**](https://github.com/)

![image](https://github.githubassets.com/images/modules/logos_page/Octocat.png)
"
`;

exports[`e2e legacy node-phrasing-2.md 1`] = `
Object {
  "document": Object {
    "nodes": Array [
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {
              "title": "title",
              "url": "https://github.com/",
            },
            "nodes": Array [
              Object {
                "marks": Array [
                  Object {
                    "object": "mark",
                    "type": "strong",
                  },
                ],
                "object": "text",
                "text": "link to GitHub.com",
              },
            ],
            "object": "inline",
            "type": "link",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {
              "alt": "image",
              "title": "title",
              "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
              "void": true,
            },
            "isVoid": true,
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "",
              },
            ],
            "object": "inline",
            "type": "image",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "marks": Array [],
            "object": "text",
            "text": "^",
          },
          Object {
            "data": Object {
              "identifier": "this is footnote",
              "label": "this is footnote",
              "referenceType": "shortcut",
            },
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "this is footnote",
              },
            ],
            "object": "inline",
            "type": "linkReference",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {
              "identifier": "^alpha",
              "label": "^alpha",
              "referenceType": "shortcut",
            },
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "^alpha",
              },
            ],
            "object": "inline",
            "type": "linkReference",
          },
          Object {
            "marks": Array [],
            "object": "text",
            "text": ": this is footnote",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {
              "identifier": "bravo",
              "label": "bravo",
              "referenceType": "full",
            },
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "alpha",
              },
            ],
            "object": "inline",
            "type": "linkReference",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {
              "alt": "alpha",
              "identifier": "bravo",
              "label": "bravo",
              "referenceType": "full",
              "void": true,
            },
            "isVoid": true,
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "",
              },
            ],
            "object": "inline",
            "type": "imageReference",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
      Object {
        "data": Object {},
        "nodes": Array [
          Object {
            "data": Object {
              "identifier": "^alpha",
              "label": "^alpha",
              "referenceType": "shortcut",
            },
            "nodes": Array [
              Object {
                "marks": Array [],
                "object": "text",
                "text": "^alpha",
              },
            ],
            "object": "inline",
            "type": "linkReference",
          },
        ],
        "object": "block",
        "type": "paragraph",
      },
    ],
    "object": "document",
  },
  "object": "value",
}
`;

exports[`e2e legacy node-phrasing-2.md 2`] = `
Immutable.Record {
  "annotations": Immutable.Map {},
  "data": Immutable.Map {},
  "document": Immutable.Record {
    "data": Immutable.Map {},
    "key": "243",
    "nodes": Immutable.List [
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "244",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "url": "https://github.com/",
              "title": "title",
            },
            "key": "245",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "246",
                "marks": Immutable.Set [
                  Immutable.Record {
                    "data": Immutable.Map {},
                    "type": "strong",
                  },
                ],
                "text": "link to GitHub.com",
              },
            ],
            "type": "link",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "247",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
              "title": "title",
              "alt": "image",
              "void": true,
            },
            "key": "248",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "249",
                "marks": Immutable.Set [],
                "text": "",
              },
            ],
            "type": "image",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "250",
        "nodes": Immutable.List [
          Immutable.Record {
            "key": "251",
            "marks": Immutable.Set [],
            "text": "^",
          },
          Immutable.Record {
            "data": Immutable.Map {
              "referenceType": "shortcut",
              "identifier": "this is footnote",
              "label": "this is footnote",
            },
            "key": "252",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "253",
                "marks": Immutable.Set [],
                "text": "this is footnote",
              },
            ],
            "type": "linkReference",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "254",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "referenceType": "shortcut",
              "identifier": "^alpha",
              "label": "^alpha",
            },
            "key": "255",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "256",
                "marks": Immutable.Set [],
                "text": "^alpha",
              },
            ],
            "type": "linkReference",
          },
          Immutable.Record {
            "key": "257",
            "marks": Immutable.Set [],
            "text": ": this is footnote",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "258",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "referenceType": "full",
              "identifier": "bravo",
              "label": "bravo",
            },
            "key": "259",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "260",
                "marks": Immutable.Set [],
                "text": "alpha",
              },
            ],
            "type": "linkReference",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "261",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "alt": "alpha",
              "referenceType": "full",
              "identifier": "bravo",
              "label": "bravo",
              "void": true,
            },
            "key": "262",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "263",
                "marks": Immutable.Set [],
                "text": "",
              },
            ],
            "type": "imageReference",
          },
        ],
        "type": "paragraph",
      },
      Immutable.Record {
        "data": Immutable.Map {},
        "key": "264",
        "nodes": Immutable.List [
          Immutable.Record {
            "data": Immutable.Map {
              "referenceType": "shortcut",
              "identifier": "^alpha",
              "label": "^alpha",
            },
            "key": "265",
            "nodes": Immutable.List [
              Immutable.Record {
                "key": "266",
                "marks": Immutable.Set [],
                "text": "^alpha",
              },
            ],
            "type": "linkReference",
          },
        ],
        "type": "paragraph",
      },
    ],
  },
  "selection": Immutable.Record {
    "anchor": Immutable.Record {
      "key": "246",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
        0,
      ],
    },
    "focus": Immutable.Record {
      "key": "246",
      "offset": 0,
      "path": Immutable.List [
        0,
        0,
        0,
      ],
    },
    "isFocused": false,
    "marks": null,
  },
}
`;

exports[`e2e legacy node-phrasing-2.md 3`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "link to GitHub.com",
                },
              ],
              "type": "strong",
            },
          ],
          "title": "title",
          "type": "link",
          "url": "https://github.com/",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "alt": "image",
          "title": "title",
          "type": "image",
          "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "^",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "this is footnote",
            },
          ],
          "identifier": "this is footnote",
          "label": "this is footnote",
          "referenceType": "shortcut",
          "type": "linkReference",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "^alpha",
            },
          ],
          "identifier": "^alpha",
          "label": "^alpha",
          "referenceType": "shortcut",
          "type": "linkReference",
        },
        Object {
          "type": "text",
          "value": ": this is footnote",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "alpha",
            },
          ],
          "identifier": "bravo",
          "label": "bravo",
          "referenceType": "full",
          "type": "linkReference",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "alt": "alpha",
          "identifier": "bravo",
          "label": "bravo",
          "referenceType": "full",
          "type": "imageReference",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "^alpha",
            },
          ],
          "identifier": "^alpha",
          "label": "^alpha",
          "referenceType": "shortcut",
          "type": "linkReference",
        },
      ],
      "type": "paragraph",
    },
  ],
  "type": "root",
}
`;

exports[`e2e legacy node-phrasing-2.md 4`] = `
"[**link to GitHub.com**](https://github.com/ \\"title\\")

![image](https://github.githubassets.com/images/modules/logos_page/Octocat.png \\"title\\")

^[this is footnote]

[^alpha]&#x3A; this is footnote

[alpha][bravo]

![alpha][bravo]

[^alpha]
"
`;

exports[`e2e node-break.md 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "text": "",
      },
    ],
    "type": "thematicBreak",
    "void": true,
  },
  Object {
    "children": Array [
      Object {
        "text": "",
      },
    ],
    "type": "thematicBreak",
    "void": true,
  },
]
`;

exports[`e2e node-break.md 2`] = `
Object {
  "children": Array [
    Object {
      "type": "thematicBreak",
    },
    Object {
      "type": "thematicBreak",
    },
  ],
  "type": "root",
}
`;

exports[`e2e node-break.md 3`] = `
"* * *

* * *
"
`;

exports[`e2e node-code.md 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "text": "@font-face {
  font-family: Chunkfive;
  src: url(\\"Chunkfive.otf\\");
}

body,
.usertext {
  color: #f0f0f0;
  background: #600;
  font-family: Chunkfive, sans;
  --heading-1: 30px/32px Helvetica, sans-serif;
}

@import url(print.css);
@media print {
  a[href^=\\"http\\"]::after {
    content: attr(href);
  }
}",
      },
    ],
    "lang": "css",
    "meta": "metadata=\\"12345\\"",
    "type": "code",
  },
  Object {
    "children": Array [
      Object {
        "text": "function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;",
      },
    ],
    "lang": "javascript",
    "meta": null,
    "type": "code",
  },
  Object {
    "children": Array [
      Object {
        "text": "class MyClass {
  public static myValue: string;
  constructor(init: string) {
    this.myValue = init;
  }
}
import fs = require(\\"fs\\");
module MyModule {
  export interface MyInterface extends Other {
    myProperty: any;
  }
}
declare magicNumber number;
myArray.forEach(() => { }); // fat arrow syntax",
      },
    ],
    "lang": "typescript",
    "meta": null,
    "type": "code",
  },
]
`;

exports[`e2e node-code.md 2`] = `
Object {
  "children": Array [
    Object {
      "lang": "css",
      "meta": "metadata=\\"12345\\"",
      "type": "code",
      "value": "@font-face {
  font-family: Chunkfive;
  src: url(\\"Chunkfive.otf\\");
}

body,
.usertext {
  color: #f0f0f0;
  background: #600;
  font-family: Chunkfive, sans;
  --heading-1: 30px/32px Helvetica, sans-serif;
}

@import url(print.css);
@media print {
  a[href^=\\"http\\"]::after {
    content: attr(href);
  }
}",
    },
    Object {
      "lang": "javascript",
      "meta": null,
      "type": "code",
      "value": "function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;",
    },
    Object {
      "lang": "typescript",
      "meta": null,
      "type": "code",
      "value": "class MyClass {
  public static myValue: string;
  constructor(init: string) {
    this.myValue = init;
  }
}
import fs = require(\\"fs\\");
module MyModule {
  export interface MyInterface extends Other {
    myProperty: any;
  }
}
declare magicNumber number;
myArray.forEach(() => { }); // fat arrow syntax",
    },
  ],
  "type": "root",
}
`;

exports[`e2e node-code.md 3`] = `
"\`\`\`css metadata=\\"12345\\"
@font-face {
  font-family: Chunkfive;
  src: url(\\"Chunkfive.otf\\");
}

body,
.usertext {
  color: #f0f0f0;
  background: #600;
  font-family: Chunkfive, sans;
  --heading-1: 30px/32px Helvetica, sans-serif;
}

@import url(print.css);
@media print {
  a[href^=\\"http\\"]::after {
    content: attr(href);
  }
}
\`\`\`

\`\`\`javascript
function $initHighlight(block, cls) {
  try {
    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)
      return process(block, true, 0x0F) +
             \` class=\\"\${cls}\\"\`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;
\`\`\`

\`\`\`typescript
class MyClass {
  public static myValue: string;
  constructor(init: string) {
    this.myValue = init;
  }
}
import fs = require(\\"fs\\");
module MyModule {
  export interface MyInterface extends Other {
    myProperty: any;
  }
}
declare magicNumber number;
myArray.forEach(() => { }); // fat arrow syntax
\`\`\`
"
`;

exports[`e2e node-heading.md 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "text": "Alpha",
      },
    ],
    "depth": 1,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "aaaa",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "text": "Bravo",
      },
    ],
    "depth": 2,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "bbbb",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "text": "Charlie",
      },
    ],
    "depth": 3,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "cccc",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "text": "Delta",
      },
    ],
    "depth": 2,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "dddd",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "text": "E",
      },
    ],
    "depth": 3,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "F",
      },
    ],
    "depth": 4,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "G",
      },
    ],
    "depth": 5,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "text": "H",
      },
    ],
    "depth": 6,
    "type": "heading",
  },
]
`;

exports[`e2e node-heading.md 2`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Alpha",
        },
      ],
      "depth": 1,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "aaaa",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Bravo",
        },
      ],
      "depth": 2,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "bbbb",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Charlie",
        },
      ],
      "depth": 3,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "cccc",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Delta",
        },
      ],
      "depth": 2,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "dddd",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "E",
        },
      ],
      "depth": 3,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "F",
        },
      ],
      "depth": 4,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "G",
        },
      ],
      "depth": 5,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "H",
        },
      ],
      "depth": 6,
      "type": "heading",
    },
  ],
  "type": "root",
}
`;

exports[`e2e node-heading.md 3`] = `
"# Alpha

aaaa

## Bravo

bbbb

### Charlie

cccc

## Delta

dddd

### E

#### F

##### G

###### H
"
`;

exports[`e2e node-ml.md 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "text": "<div>
<span>This is <b>html</b></span>
</div>",
      },
    ],
    "type": "html",
  },
  Object {
    "children": Array [
      Object {
        "text": "<!--comment-->",
      },
    ],
    "type": "html",
  },
  Object {
    "children": Array [
      Object {
        "text": "",
      },
    ],
    "type": "thematicBreak",
    "void": true,
  },
  Object {
    "children": Array [
      Object {
        "text": "title: \\"This is yaml\\"
date: 2020-04-30 22:34
categories: ",
      },
      Object {
        "children": Array [
          Object {
            "text": "JavaScript, React",
          },
        ],
        "identifier": "javascript, react",
        "label": "JavaScript, React",
        "referenceType": "shortcut",
        "type": "linkReference",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "text": "",
      },
    ],
    "type": "thematicBreak",
    "void": true,
  },
]
`;

exports[`e2e node-ml.md 2`] = `
Object {
  "children": Array [
    Object {
      "type": "html",
      "value": "<div>
<span>This is <b>html</b></span>
</div>",
    },
    Object {
      "type": "html",
      "value": "<!--comment-->",
    },
    Object {
      "type": "thematicBreak",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "title: \\"This is yaml\\"
date: 2020-04-30 22:34
categories: ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "JavaScript, React",
            },
          ],
          "identifier": "javascript, react",
          "label": "JavaScript, React",
          "referenceType": "shortcut",
          "type": "linkReference",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "type": "thematicBreak",
    },
  ],
  "type": "root",
}
`;

exports[`e2e node-ml.md 3`] = `
"<div>
<span>This is <b>html</b></span>
</div>

<!--comment-->

* * *

title: \\"This is yaml\\"
date: 2020-04-30 22:34
categories: [JavaScript, React]

* * *
"
`;

exports[`e2e node-paragraph.md 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
      },
    ],
    "type": "paragraph",
  },
]
`;

exports[`e2e node-paragraph.md 2`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
        },
      ],
      "type": "paragraph",
    },
  ],
  "type": "root",
}
`;

exports[`e2e node-paragraph.md 3`] = `
"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
"
`;

exports[`e2e node-phrasing-1.md 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "text": "aaa ",
      },
      Object {
        "strong": true,
        "text": "aaaaaaa",
      },
      Object {
        "text": " aaaaaa ",
      },
      Object {
        "emphasis": true,
        "text": "aaaaaaaa",
      },
      Object {
        "text": " aaaaaaaa ",
      },
      Object {
        "delete": true,
        "text": "aaaaaaa",
      },
      Object {
        "text": " aaaa ",
      },
      Object {
        "inlineCode": true,
        "text": "aaaaaaaa",
      },
      Object {
        "text": " aaa
aaaaaaaaaa ",
      },
      Object {
        "emphasis": true,
        "text": "aa ",
      },
      Object {
        "emphasis": true,
        "strong": true,
        "text": "a ",
      },
      Object {
        "delete": true,
        "emphasis": true,
        "strong": true,
        "text": "aa",
      },
      Object {
        "emphasis": true,
        "strong": true,
        "text": " aa ",
      },
      Object {
        "emphasis": true,
        "inlineCode": true,
        "strong": true,
        "text": "aaa",
      },
      Object {
        "emphasis": true,
        "strong": true,
        "text": " aaaaa",
      },
      Object {
        "emphasis": true,
        "text": " aaaa",
      },
      Object {
        "text": " aa",
      },
      Object {
        "inlineCode": true,
        "text": "a*aa*aa_aa_a~~aa~~a",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "strong": true,
        "text": "heading",
      },
    ],
    "depth": 1,
    "type": "heading",
  },
  Object {
    "children": Array [
      Object {
        "checked": null,
        "children": Array [
          Object {
            "children": Array [
              Object {
                "strong": true,
                "text": "list",
              },
            ],
            "type": "paragraph",
          },
        ],
        "spread": false,
        "type": "listItem",
      },
    ],
    "ordered": false,
    "spread": false,
    "start": null,
    "type": "list",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "strong": true,
            "text": "quote",
          },
        ],
        "type": "paragraph",
      },
    ],
    "type": "blockquote",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "strong": true,
            "text": "link to GitHub.com",
          },
        ],
        "title": null,
        "type": "link",
        "url": "https://github.com/",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "strong": true,
            "text": "link to GitHub.com",
          },
        ],
        "title": null,
        "type": "link",
        "url": "https://github.com/",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "alt": "image",
        "children": Array [
          Object {
            "text": "",
          },
        ],
        "title": null,
        "type": "image",
        "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
        "void": true,
      },
    ],
    "type": "paragraph",
  },
]
`;

exports[`e2e node-phrasing-1.md 2`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "aaa ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "aaaaaaa",
            },
          ],
          "type": "strong",
        },
        Object {
          "type": "text",
          "value": " aaaaaa ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "aaaaaaaa",
            },
          ],
          "type": "emphasis",
        },
        Object {
          "type": "text",
          "value": " aaaaaaaa ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "aaaaaaa",
            },
          ],
          "type": "delete",
        },
        Object {
          "type": "text",
          "value": " aaaa ",
        },
        Object {
          "type": "inlineCode",
          "value": "aaaaaaaa",
        },
        Object {
          "type": "text",
          "value": " aaa
aaaaaaaaaa ",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "aa ",
            },
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "a ",
                },
                Object {
                  "children": Array [
                    Object {
                      "type": "text",
                      "value": "aa",
                    },
                  ],
                  "type": "delete",
                },
                Object {
                  "type": "text",
                  "value": " aa ",
                },
                Object {
                  "type": "inlineCode",
                  "value": "aaa",
                },
                Object {
                  "type": "text",
                  "value": " aaaaa",
                },
              ],
              "type": "strong",
            },
            Object {
              "type": "text",
              "value": " aaaa",
            },
          ],
          "type": "emphasis",
        },
        Object {
          "type": "text",
          "value": " aa",
        },
        Object {
          "type": "inlineCode",
          "value": "a*aa*aa_aa_a~~aa~~a",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "heading",
            },
          ],
          "type": "strong",
        },
      ],
      "depth": 1,
      "type": "heading",
    },
    Object {
      "children": Array [
        Object {
          "checked": null,
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "type": "text",
                      "value": "list",
                    },
                  ],
                  "type": "strong",
                },
              ],
              "type": "paragraph",
            },
          ],
          "spread": false,
          "type": "listItem",
        },
      ],
      "ordered": false,
      "spread": false,
      "start": null,
      "type": "list",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "quote",
                },
              ],
              "type": "strong",
            },
          ],
          "type": "paragraph",
        },
      ],
      "type": "blockquote",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "link to GitHub.com",
                },
              ],
              "type": "strong",
            },
          ],
          "title": null,
          "type": "link",
          "url": "https://github.com/",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "link to GitHub.com",
                },
              ],
              "type": "strong",
            },
          ],
          "title": null,
          "type": "link",
          "url": "https://github.com/",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "alt": "image",
          "title": null,
          "type": "image",
          "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
        },
      ],
      "type": "paragraph",
    },
  ],
  "type": "root",
}
`;

exports[`e2e node-phrasing-1.md 3`] = `
"aaa **aaaaaaa** aaaaaa _aaaaaaaa_ aaaaaaaa ~~aaaaaaa~~ aaaa \`aaaaaaaa\` aaa
aaaaaaaaaa _aa **a ~~aa~~ aa \`aaa\` aaaaa** aaaa_ aa\`a*aa*aa_aa_a~~aa~~a\`

# **heading**

-   **list**

> **quote**

[**link to GitHub.com**](https://github.com/)

[**link to GitHub.com**](https://github.com/)

![image](https://github.githubassets.com/images/modules/logos_page/Octocat.png)
"
`;

exports[`e2e node-phrasing-2.md 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "strong": true,
            "text": "link to GitHub.com",
          },
        ],
        "title": "title",
        "type": "link",
        "url": "https://github.com/",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "alt": "image",
        "children": Array [
          Object {
            "text": "",
          },
        ],
        "title": "title",
        "type": "image",
        "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
        "void": true,
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "text": "^",
      },
      Object {
        "children": Array [
          Object {
            "text": "this is footnote",
          },
        ],
        "identifier": "this is footnote",
        "label": "this is footnote",
        "referenceType": "shortcut",
        "type": "linkReference",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "text": "^alpha",
          },
        ],
        "identifier": "^alpha",
        "label": "^alpha",
        "referenceType": "shortcut",
        "type": "linkReference",
      },
      Object {
        "text": ": this is footnote",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "text": "alpha",
          },
        ],
        "identifier": "bravo",
        "label": "bravo",
        "referenceType": "full",
        "type": "linkReference",
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "alt": "alpha",
        "children": Array [
          Object {
            "text": "",
          },
        ],
        "identifier": "bravo",
        "label": "bravo",
        "referenceType": "full",
        "type": "imageReference",
        "void": true,
      },
    ],
    "type": "paragraph",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "text": "^alpha",
          },
        ],
        "identifier": "^alpha",
        "label": "^alpha",
        "referenceType": "shortcut",
        "type": "linkReference",
      },
    ],
    "type": "paragraph",
  },
]
`;

exports[`e2e node-phrasing-2.md 2`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "type": "text",
                  "value": "link to GitHub.com",
                },
              ],
              "type": "strong",
            },
          ],
          "title": "title",
          "type": "link",
          "url": "https://github.com/",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "alt": "image",
          "title": "title",
          "type": "image",
          "url": "https://github.githubassets.com/images/modules/logos_page/Octocat.png",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "type": "text",
          "value": "^",
        },
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "this is footnote",
            },
          ],
          "identifier": "this is footnote",
          "label": "this is footnote",
          "referenceType": "shortcut",
          "type": "linkReference",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "^alpha",
            },
          ],
          "identifier": "^alpha",
          "label": "^alpha",
          "referenceType": "shortcut",
          "type": "linkReference",
        },
        Object {
          "type": "text",
          "value": ": this is footnote",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "alpha",
            },
          ],
          "identifier": "bravo",
          "label": "bravo",
          "referenceType": "full",
          "type": "linkReference",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "alt": "alpha",
          "identifier": "bravo",
          "label": "bravo",
          "referenceType": "full",
          "type": "imageReference",
        },
      ],
      "type": "paragraph",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "type": "text",
              "value": "^alpha",
            },
          ],
          "identifier": "^alpha",
          "label": "^alpha",
          "referenceType": "shortcut",
          "type": "linkReference",
        },
      ],
      "type": "paragraph",
    },
  ],
  "type": "root",
}
`;

exports[`e2e node-phrasing-2.md 3`] = `
"[**link to GitHub.com**](https://github.com/ \\"title\\")

![image](https://github.githubassets.com/images/modules/logos_page/Octocat.png \\"title\\")

^[this is footnote]

[^alpha]&#x3A; this is footnote

[alpha][bravo]

![alpha][bravo]

[^alpha]
"
`;
